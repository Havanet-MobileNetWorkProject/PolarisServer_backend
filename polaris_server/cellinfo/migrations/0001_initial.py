# Generated by Django 5.2.2 on 2025-06-05 20:08

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SignalTest2G',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_id', models.CharField(max_length=100)),
                ('timestamp', models.DateTimeField()),
                ('generation', models.CharField(choices=[('2G', '2G'), ('3G', '3G'), ('4G', '4G'), ('5G', '5G')], max_length=3)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('plmn_id', models.CharField(max_length=10)),
                ('cell_id', models.BigIntegerField()),
                ('rxlev', models.FloatField()),
                ('lac', models.IntegerField()),
                ('arfcn', models.IntegerField(blank=True, null=True)),
                ('band', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SignalTest3G',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_id', models.CharField(max_length=100)),
                ('timestamp', models.DateTimeField()),
                ('generation', models.CharField(choices=[('2G', '2G'), ('3G', '3G'), ('4G', '4G'), ('5G', '5G')], max_length=3)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('plmn_id', models.CharField(max_length=10)),
                ('cell_id', models.BigIntegerField()),
                ('rscp', models.FloatField()),
                ('ecn0', models.FloatField()),
                ('lac', models.IntegerField()),
                ('arfcn', models.IntegerField(blank=True, null=True)),
                ('band', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SignalTest4G',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_id', models.CharField(max_length=100)),
                ('timestamp', models.DateTimeField()),
                ('generation', models.CharField(choices=[('2G', '2G'), ('3G', '3G'), ('4G', '4G'), ('5G', '5G')], max_length=3)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('plmn_id', models.CharField(max_length=10)),
                ('cell_id', models.BigIntegerField()),
                ('rsrp', models.FloatField()),
                ('rsrq', models.FloatField()),
                ('tac', models.IntegerField()),
                ('arfcn', models.IntegerField(blank=True, null=True)),
                ('band', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SignalTest5G',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_id', models.CharField(max_length=100)),
                ('timestamp', models.DateTimeField()),
                ('generation', models.CharField(choices=[('2G', '2G'), ('3G', '3G'), ('4G', '4G'), ('5G', '5G')], max_length=3)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('plmn_id', models.CharField(max_length=10)),
                ('cell_id', models.BigIntegerField()),
                ('rsrp', models.FloatField()),
                ('rsrq', models.FloatField()),
                ('tac', models.IntegerField()),
                ('arfcn', models.IntegerField(blank=True, null=True)),
                ('band', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
